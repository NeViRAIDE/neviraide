-- dofile(vim.g.neviraide_themes_cache .. 'notify')

-- local icon = require('neviraide-ui.icons.utils').icon

-- ---@param title string
-- ---@param body string
-- ---@return integer
-- local function min_width(title, body)
--   local title_length = #title + 4
--   local body_length = #body
--   if title_length > body_length then return #title_length end
--   return #body_length
-- end

-- return {
--   on_open = function(win, record)
--     if vim.api.nvim_win_is_valid(win) then
--       vim.api.nvim_win_set_config(win, {
--         title = {
--           {
--             ' ' .. record.icon .. ' ' .. record.title[1] .. ' ',
--             'Notify' .. record.level .. 'Title',
--           },
--         },
--         title_pos = 'center',
--         border = vim.g.borders,
--       })
--     end
--   end,
--   render = function(bufnr, notif, highlights)
--     local renderbase = require('notify.render.base')
--     local namespace = renderbase.namespace()
--     local length = string.len(notif.icon)
--
--     notif.message[1] = string.format(' %s ', notif.message[1])
--     vim.api.nvim_buf_set_lines(bufnr, 0, -1, false, notif.message)
--
--     vim.api.nvim_buf_set_extmark(bufnr, namespace, 0, length, {
--       hl_group = highlights.body,
--       end_line = #notif.message,
--       priority = 50,
--     })
--   end,
--   timeout = 3000,
--   fps = 60,
--   icons = {
--     ERROR = icon('', 'x-circle', 0, 1),
--     WARN = icon('', 'alert', 0, 1),
--     INFO = icon('', 'info', 0, 1),
--     DEBUG = icon('', 'bug', 0, 1),
--     TRACE = icon('', 'play', 0, 1),
--   },
--   minimum_width = 10,
--   max_height = function() return math.floor(vim.o.lines * 0.75) end,
--   max_width = function() return math.floor(vim.o.columns * 0.75) end,
-- }
